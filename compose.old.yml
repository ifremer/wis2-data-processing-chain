services:
  # broker de message
  broker:
    image: eclipse-mosquitto:2.0.20
    container_name: mosquitto
    user: 1000:1000
    volumes:
      - ./broker/config:/mosquitto/config:ro
      - ./broker/data:/mosquitto/data:rw
    ports: 
      - 8080:8080
  # ecoute d'un evenement de création de fichier
  listen-file-event:
    build: ./scripts
    user: 1000:1000
    container_name: listen-file-event
    environment:
      MQTT_BROKER_DOMAIN: broker
      MQTT_BROKER_PORT: 8080
      MQTT_USERNAME: prod-files-ro
      MQTT_PASSWORD: prod-files-ro
      MQTT_BROKER_TOPIC: production/files/coriolis/argo/bufr
    command: >
      sh -c "python3 /app/listen-file-event.py"
    depends_on:
      broker:
        condition: service_started
  # creation d'un notification message pour un fichier de données exemple déposé dans le repertoire data du projet
  # create-data-message:
  #   build: ./scripts
  #   user: 1000:1000
  #   container_name: create-data-message
  #   environment:
  #     PYWIS_PUBSUB_GDC_URL: https://api.weather.gc.ca/collections/wis2-discovery-metadata
  #   volumes:
  #     - ./data:/data:ro
  #   command: >
  #     sh -c "python3 /app/create-notification-message.py $INPUT_DATA_FILE --output $OUTPUT_DATA_FILE"
  # # validation message pour le fichier de données
  # validate-data-message:
  #   build: ./scripts
  #   container_name: validate-data-message
  #   environment:
  #     PYWIS_PUBSUB_GDC_URL: https://api.weather.gc.ca/collections/wis2-discovery-metadata
  #   volumes:
  #     - ./data:/data:ro
  #   command: >
  #     sh -c "python3 /app/validate-notification-message-pywis-pubsub.py $OUTPUT_DATA_FILE"
  #   depends_on:
  #     create-data-message:
  #       condition: service_completed_successfully

  # # publication du contenu du fichier données
  # publish-data-message:
  #   build: ./scripts
  #   container_name: publish-data-message
  #   volumes:
  #     - ./data:/data:ro
  #   command: >
  #     sh -c "python3 /app/publish-notification-message.py $MQTT_BROKER_TOPIC_PUB $OUTPUT_DATA_FILE"
  #   environment:
  #     MQTT_BROKER_DOMAIN: broker
  #     MQTT_BROKER_PORT: 8080
  #     MQTT_USERNAME: wis2-argo-rw
  #     MQTT_PASSWORD: wis2-argo-rw
  #     MQTT_BROKER_TOPIC_SUB: origin/a/wis2/fr-ifremer-argo/core/data/ocean/surface-based-observations/drifting-ocean-profilers
  #     MQTT_BROKER_TOPIC_PUB: origin/a/wis2/fr-ifremer-argo/core/data/ocean/surface-based-observations/drifting-ocean-profilers
  #   depends_on:
  #     broker:
  #       condition: service_started
  #     validate-data-message:
  #       condition: service_completed_successfully
