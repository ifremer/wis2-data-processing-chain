services:
  #Â broker de message
  broker:
    image: eclipse-mosquitto:2.0.20
    container_name: mosquitto
    user: 1000:1000
    volumes:
      - ./broker/mnt/config:/mosquitto/config:ro
      - ./broker/mnt/data:/mosquitto/data:rw
    ports: 
      - 8080:8080
  validate-metadata:
    build: ./scripts
    container_name: validate-metadata
    volumes:
      - ./data:/data:ro
    command: >
      sh -c "python3 /app/validate-metadata-message-pywcmp.py /data/int-coriolis-argo-core.json"
  publish-metadata:
    build: ./scripts
    container_name: publish-metadata
    volumes:
      - ./data:/data:ro
    command: >
      sh -c "python3 /app/publish-notification-message.py origin/a/wis2/fr-ifremer-argo /data/int-coriolis-argo-core.json"
    depends_on:
      broker:
        condition: service_started
      validate-metadata:
        condition: service_completed_successfully
  # validate-data:
  #   build: ./scripts
  #   container_name: validate-data
  #   environment:
  #     PYWIS_PUBSUB_GDC_URL: https://api.weather.gc.ca/collections/wis2-discovery-metadata
  #   volumes:
  #     - ./data:/data:ro
  #   command: >
  #     sh -c "python3 /app/validate-metadata-message-pywis-pubsub.py /data/coriolis-msg-argo-core-notification.json"
  # publish-data:
  #   build: ./scripts
  #   container_name: publish-data
  #   volumes:
  #     - ./data:/data:ro
  #   command: >
  #     sh -c "python3 /app/publish-data-message.py /data/coriolis-msg-argo-core-notification.json"
  #   depends_on:
  #     broker:
  #       condition: service_started
  #     validate-data:
  #       condition: service_completed_successfully
      